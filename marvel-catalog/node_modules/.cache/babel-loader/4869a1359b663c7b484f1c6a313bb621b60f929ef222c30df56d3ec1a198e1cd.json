{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jluca\\\\marvel-project\\\\marvel-catalog\\\\src\\\\components\\\\BookGrid.js\";\nimport React, { useEffect, useState } from 'react';\nimport './BookGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookGrid = ({\n  books,\n  searchTerm\n}) => {\n  const getHighlightedText = (text, highlight) => {\n    // Split the text by the highlight term, include term itself into parts, ignoring case\n    const parts = text.split(new RegExp(`(${highlight})`, 'gi'));\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: parts.map((part, i) => part.toLowerCase() === highlight.toLowerCase() ? /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: 'yellow'\n        },\n        children: part\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this) : part)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  };\n  const filteredBooks = books.filter(book => book.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: filteredBooks.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        onClick: () => handleBookClick(book._id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: book.cover_image,\n          alt: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: book.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Issue #\", book.issueNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"more-options\",\n          children: \"\\u2022\\u2022\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, book._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = BookGrid;\nconst handleBookClick = id => {\n  window.location.href = `/book/${id}`;\n};\nexport default BookGrid;\nvar _c;\n$RefreshReg$(_c, \"BookGrid\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","BookGrid","books","searchTerm","getHighlightedText","text","highlight","parts","split","RegExp","children","map","part","i","toLowerCase","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","filteredBooks","filter","book","title","includes","className","onClick","handleBookClick","_id","src","cover_image","alt","issueNumber","_c","id","window","location","href","$RefreshReg$"],"sources":["C:/Users/jluca/marvel-project/marvel-catalog/src/components/BookGrid.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './BookGrid.css';\r\n\r\nconst BookGrid = ({ books, searchTerm }) => {\r\n\r\n  const getHighlightedText = (text, highlight) => {\r\n    // Split the text by the highlight term, include term itself into parts, ignoring case\r\n    const parts = text.split(new RegExp(`(${highlight})`, 'gi'));\r\n    return (\r\n      <span>\r\n        {parts.map((part, i) =>\r\n          part.toLowerCase() === highlight.toLowerCase() ?\r\n          <span key={i} style={{ backgroundColor: 'yellow' }}>{part}</span> :\r\n          part\r\n          )}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  const filteredBooks = books.filter(book =>\r\n    book.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"grid-container\">\r\n        {filteredBooks.map(book => (\r\n          <div key={book._id} className=\"grid-item\" onClick={() => handleBookClick(book._id)}>\r\n            <img src={book.cover_image} alt={book.title} />\r\n            <div className=\"details\">\r\n              <h3>{book.title}</h3>\r\n              <p>Issue #{book.issueNumber}</p>\r\n            </div>\r\n            <div className=\"more-options\">•••</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst handleBookClick = (id) => {\r\n  window.location.href = `/book/${id}`;\r\n};\r\n\r\nexport default BookGrid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}